# ============================================================
# Veracode GitHub Workflow Integration Configuration
# Organization-wide scanning configuration
# ============================================================

# ------------------------------------------------------------
# GENERAL SETTINGS
# ------------------------------------------------------------
global:
  # Set to true to automatically run scans across all repos listed in repo_list.yml
  # or all repos if wildcard '*' is used.
  enable_repo_scanning: true

  # Enable or disable global debugging output (optional)
  debug: false

# ------------------------------------------------------------
# REPOSITORY SCOPING
# ------------------------------------------------------------
# To scan all repos in your org, configure repo_list.yml with:
# include_repos:
#   - '*'
# exclude_repos:
#   - 'veracode'     # Example: exclude the integration repo itself

# ------------------------------------------------------------
# STATIC ANALYSIS (SAST) CONFIGURATION
# ------------------------------------------------------------
veracode_static_scan:
  # Enable or disable static analysis scanning
  enabled: true

  # Run scans automatically on push and/or pull request
  push:
    trigger: true
    branches_to_run:
      - main
      - master
      - develop
      - release/*
  pull_request:
    trigger: true

  # Optionally store results in the Veracode Platform (recommended for visibility)
  analysis_on_platform: true

  # Security policy name defined in Veracode platform
  policy: "Veracode Recommended Medium + SCA"

  # Break build if policy fails
  break_build_policy_findings: true

  # Enable SARIF output to show findings directly in GitHub Code Scanning Alerts
  create_code_scanning_alert: true

  # Create GitHub Issues automatically for new findings
  create_issue: false

  # Automatically create a new Veracode application profile if one doesn’t exist
  create_application: true

  # Optional: Run a lightweight pipeline scan before upload
  run_pipeline_scan: false

  # Optional: Upload artifacts built by custom workflows
  use_custom_workflow: false

  # Timeouts (in minutes)
  scan_timeout: 60

# ------------------------------------------------------------
# SOFTWARE COMPOSITION ANALYSIS (SCA) CONFIGURATION
# ------------------------------------------------------------
veracode_sca_scan:
  enabled: true

  # Run on both push and pull request events
  push:
    trigger: true
  pull_request:
    trigger: true

  # Continuous monitoring of open-source components
  analysis_on_platform: true

  # Break build if CVSS severity ≥ 7
  break_build_policy_findings: true

  # CVSS threshold for failing the build
  fail_on_severity: "High"

  # Upload SCA results to GitHub Code Scanning
  create_code_scanning_alert: true

  # Optional: enable auto-remediation PRs using Veracode Fix
  enable_veracode_fix: true

# ------------------------------------------------------------
# CUSTOM BUILD OPTIONS
# ------------------------------------------------------------
build:
  # If your repos use different build tools, you can specify defaults here.
  # This section is optional and can be overridden per repo.
  default_build_command: |
    echo "Running default build"
    mvn -B clean package -DskipTests || true

  # Directory or file path for build artifact to upload for scanning
  artifact_file: "./target"

# ------------------------------------------------------------
# NOTIFICATIONS AND REPORTING
# ------------------------------------------------------------
notifications:
  # Notify on Slack or webhook if desired (requires separate configuration)
  enable_notifications: false

  # Send notifications only on failed scans
  notify_on_failures_only: true

  # Example Slack webhook (disabled by default)
  slack_webhook_url: ""

# ------------------------------------------------------------
# RETENTION / CLEANUP
# ------------------------------------------------------------
cleanup:
  # Retain logs and artifacts for 7 days
  artifact_retention_days: 7

# ------------------------------------------------------------
# END OF CONFIGURATION
# ------------------------------------------------------------
